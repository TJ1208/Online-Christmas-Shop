# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - techspec

on:
  push:
    branches:
      - main
    paths: 'TJTechShopFE/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: |
          cd TJTechShopFE
          npm ci
      
      # - name: Cache NPM
      #   uses: actions/cache@v3
      #   with:
      #     # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
      #     path: |
      #       ~/.npm
      #       ${{ github.workspace }}/.next/cache
      #     # Generate a new cache whenever packages or source files change.
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
      #     # If source files changed but packages didn't, rebuild from a prior cache.
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            
      - name: npm install, build, and test
        run: |
          cd TJTechShopFE
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: |
          cd TJTechShopFE
          zip release.zip ./* .next -qr

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: TJTechShopFE/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'techspec'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0D7F4DC6519F4A14BC0D04C0EB7BAAB5 }}
          package: release.zip

      - name: Delete zip file
        run: rm release.zip
